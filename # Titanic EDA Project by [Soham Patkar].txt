# Titanic EDA Project by [Your Name Here]

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv('titanic.csv')  # Update with your actual path if different

# Clean and prep data
df['Age'] = pd.to_numeric(df['Age'], errors='coerce')
df['Age'] = df['Age'].fillna(df['Age'].median())
df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])
df['Fare'] = df['Fare'].fillna(df['Fare'].median())
df['Cabin'] = df['Cabin'].fillna('Unknown')
df['FamilySize'] = df['SibSp'] + df['Parch'] + 1

# Age Binning
df['AgeBin'] = pd.cut(
    df['Age'],
    bins=[0, 12, 18, 35, 60, 100],
    labels=['Child', 'Teen', 'Young Adult', 'Adult', 'Senior']
)

# Title extraction
df['Title'] = df['Name'].str.extract('([A-Za-z]+)\.', expand=False)
rare_titles = df['Title'].value_counts()[df['Title'].value_counts() < 10].index
df['Title'] = df['Title'].replace(rare_titles, 'Rare')
title_map = {'Mr': 'Mr', 'Miss': 'Miss', 'Mrs': 'Mrs', 'Master': 'Master', 'Rare': 'Rare'}
df['Title'] = df['Title'].map(title_map)

# Deck extraction
df['Deck'] = df['Cabin'].apply(lambda x: x[0] if x != 'Unknown' else 'U')

# ========== Visualizations ==========

# 1. Survival Count
sns.countplot(x='Survived', data=df)
plt.title('Survival Count (0 = No, 1 = Yes)')
plt.show()

# 2. Survival by Gender
sns.countplot(x='Sex', hue='Survived', data=df)
plt.title('Survival by Gender')
plt.show()

# 3. Survival by Pclass
sns.countplot(x='Pclass', hue='Survived', data=df)
plt.title('Survival by Passenger Class')
plt.show()

# 4. Age Distribution
sns.histplot(df['Age'], kde=True, bins=30)
plt.title('Age Distribution')
plt.show()

# 5. Age vs Survival
sns.kdeplot(data=df[df['Survived'] == 1], x='Age', label='Survived', shade=True)
sns.kdeplot(data=df[df['Survived'] == 0], x='Age', label='Not Survived', shade=True)
plt.title('Age Distribution by Survival')
plt.legend()
plt.show()

# 6. Fare Distribution
sns.histplot(df['Fare'], bins=40, kde=True)
plt.title('Fare Distribution')
plt.show()

# 7. Correlation Heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

# 8. Survival Rate by Age Group
age_survival = df.groupby('AgeBin', observed=True)['Survived'].mean().reset_index()
sns.barplot(x='AgeBin', y='Survived', data=age_survival)
plt.title('Survival Rate by Age Group')
plt.ylabel('Survival Rate')
plt.show()

# 9. Survival Rate by Family Size
family_survival = df.groupby('FamilySize', observed=True)['Survived'].mean().reset_index()
sns.barplot(x='FamilySize', y='Survived', data=family_survival)
plt.title('Survival Rate by Family Size')
plt.ylabel('Survival Rate')
plt.show()

# 10. Survival by Title
sns.countplot(x='Title', hue='Survived', data=df)
plt.title('Survival Count by Title')
plt.show()

# 11. Survival by Deck
deck_survival = df.groupby('Deck', observed=True)['Survived'].mean().reset_index()
sns.barplot(x='Deck', y='Survived', data=deck_survival)
plt.title('Survival Rate by Deck')
plt.ylabel('Survival Rate')
plt.show()

# 12. Survival by Gender & Class Pivot
pivot = df.pivot_table(values='Survived', index='Sex', columns='Pclass', aggfunc='mean')
sns.heatmap(pivot, annot=True, cmap='YlGnBu', fmt='.2f')
plt.title('Survival Rate by Gender and Passenger Class')
plt.show()
